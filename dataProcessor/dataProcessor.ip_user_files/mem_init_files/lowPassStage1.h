
//------------------------------------------------------------------------------
// (c) Copyright 2014 Xilinx, Inc. All rights reserved.
//
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
//
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
//
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
//
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.
//------------------------------------------------------------------------------ 
//
// C Model configuration for the "lowPassStage1" instance.
//
//------------------------------------------------------------------------------
//
// coefficients: 2,3,4,4,5,7,8,9,11,13,15,17,20,22,25,29,32,36,40,45,50,55,61,68,74,82,90,98,107,117,128,139,151,163,177,192,207,223,241,259,279,299,321,345,369,395,422,451,481,513,547,583,620,659,700,743,788,836,886,938,992,1049,1109,1171,1236,1304,1375,1448,1525,1606,1689,1776,1867,1961,2059,2161,2267,2376,2490,2609,2731,2859,2990,3127,3269,3415,3567,3723,3886,4053,4227,4406,4590,4781,4978,5182,5391,5607,5830,6060,6296,6539,6790,7048,7313,7586,7867,8155,8451,8756,9068,9389,9718,10056,10403,10758,11122,11496,11879,12271,12672,13083,13503,13934,14374,14824,15284,15755,16236,16727,17228,17741,18263,18797,19342,19897,20463,21041,21629,22229,22840,23462,24096,24741,25398,26066,26746,27437,28140,28854,29580,30318,31067,31829,32601,33386,34182,34990,35809,36640,37482,38336,39201,40078,40966,41865,42776,43698,44630,45574,46529,47494,48470,49456,50453,51460,52478,53505,54542,55589,56645,57711,58786,59870,60963,62065,63175,64293,65419,66553,67695,68844,70000,71164,72333,73509,74692,75880,77074,78273,79477,80686,81899,83116,84337,85562,86790,88021,89255,90490,91728,92967,94208,95449,96691,97933,99175,100416,101657,102896,104134,105369,106603,107833,109060,110284,111504,112720,113931,115136,116337,117531,118720,119901,121076,122243,123403,124554,125697,126830,127955,129069,130173,131267,132350,133422,134482,135529,136565,137587,138597,139593,140575,141542,142495,143433,144356,145263,146154,147029,147887,148728,149552,150358,151146,151916,152667,153400,154113,154807,155482,156137,156771,157385,157978,158551,159102,159633,160141,160628,161093,161536,161956,162355,162730,163083,163413,163720,164004,164264,164501,164715,164905,165072,165215,165334,165430,165501,165549,165573,165573,165549,165501,165430,165334,165215,165072,164905,164715,164501,164264,164004,163720,163413,163083,162730,162355,161956,161536,161093,160628,160141,159633,159102,158551,157978,157385,156771,156137,155482,154807,154113,153400,152667,151916,151146,150358,149552,148728,147887,147029,146154,145263,144356,143433,142495,141542,140575,139593,138597,137587,136565,135529,134482,133422,132350,131267,130173,129069,127955,126830,125697,124554,123403,122243,121076,119901,118720,117531,116337,115136,113931,112720,111504,110284,109060,107833,106603,105369,104134,102896,101657,100416,99175,97933,96691,95449,94208,92967,91728,90490,89255,88021,86790,85562,84337,83116,81899,80686,79477,78273,77074,75880,74692,73509,72333,71164,70000,68844,67695,66553,65419,64293,63175,62065,60963,59870,58786,57711,56645,55589,54542,53505,52478,51460,50453,49456,48470,47494,46529,45574,44630,43698,42776,41865,40966,40078,39201,38336,37482,36640,35809,34990,34182,33386,32601,31829,31067,30318,29580,28854,28140,27437,26746,26066,25398,24741,24096,23462,22840,22229,21629,21041,20463,19897,19342,18797,18263,17741,17228,16727,16236,15755,15284,14824,14374,13934,13503,13083,12672,12271,11879,11496,11122,10758,10403,10056,9718,9389,9068,8756,8451,8155,7867,7586,7313,7048,6790,6539,6296,6060,5830,5607,5391,5182,4978,4781,4590,4406,4227,4053,3886,3723,3567,3415,3269,3127,2990,2859,2731,2609,2490,2376,2267,2161,2059,1961,1867,1776,1689,1606,1525,1448,1375,1304,1236,1171,1109,1049,992,938,886,836,788,743,700,659,620,583,547,513,481,451,422,395,369,345,321,299,279,259,241,223,207,192,177,163,151,139,128,117,107,98,90,82,74,68,61,55,50,45,40,36,32,29,25,22,20,17,15,13,11,9,8,7,5,4,4,3,2
// chanpats: 173
// name: lowPassStage1
// filter_type: 2
// rate_change: 0
// interp_rate: 1
// decim_rate: 64
// zero_pack_factor: 1
// coeff_padding: 20
// num_coeffs: 600
// coeff_sets: 1
// reloadable: 0
// is_halfband: 0
// quantization: 0
// coeff_width: 19
// coeff_fract_width: 0
// chan_seq: 0
// num_channels: 1
// num_paths: 1
// data_width: 16
// data_fract_width: 0
// output_rounding_mode: 6
// output_width: 18
// output_fract_width: 0
// config_method: 0

const double lowPassStage1_coefficients[600] = {2,3,4,4,5,7,8,9,11,13,15,17,20,22,25,29,32,36,40,45,50,55,61,68,74,82,90,98,107,117,128,139,151,163,177,192,207,223,241,259,279,299,321,345,369,395,422,451,481,513,547,583,620,659,700,743,788,836,886,938,992,1049,1109,1171,1236,1304,1375,1448,1525,1606,1689,1776,1867,1961,2059,2161,2267,2376,2490,2609,2731,2859,2990,3127,3269,3415,3567,3723,3886,4053,4227,4406,4590,4781,4978,5182,5391,5607,5830,6060,6296,6539,6790,7048,7313,7586,7867,8155,8451,8756,9068,9389,9718,10056,10403,10758,11122,11496,11879,12271,12672,13083,13503,13934,14374,14824,15284,15755,16236,16727,17228,17741,18263,18797,19342,19897,20463,21041,21629,22229,22840,23462,24096,24741,25398,26066,26746,27437,28140,28854,29580,30318,31067,31829,32601,33386,34182,34990,35809,36640,37482,38336,39201,40078,40966,41865,42776,43698,44630,45574,46529,47494,48470,49456,50453,51460,52478,53505,54542,55589,56645,57711,58786,59870,60963,62065,63175,64293,65419,66553,67695,68844,70000,71164,72333,73509,74692,75880,77074,78273,79477,80686,81899,83116,84337,85562,86790,88021,89255,90490,91728,92967,94208,95449,96691,97933,99175,100416,101657,102896,104134,105369,106603,107833,109060,110284,111504,112720,113931,115136,116337,117531,118720,119901,121076,122243,123403,124554,125697,126830,127955,129069,130173,131267,132350,133422,134482,135529,136565,137587,138597,139593,140575,141542,142495,143433,144356,145263,146154,147029,147887,148728,149552,150358,151146,151916,152667,153400,154113,154807,155482,156137,156771,157385,157978,158551,159102,159633,160141,160628,161093,161536,161956,162355,162730,163083,163413,163720,164004,164264,164501,164715,164905,165072,165215,165334,165430,165501,165549,165573,165573,165549,165501,165430,165334,165215,165072,164905,164715,164501,164264,164004,163720,163413,163083,162730,162355,161956,161536,161093,160628,160141,159633,159102,158551,157978,157385,156771,156137,155482,154807,154113,153400,152667,151916,151146,150358,149552,148728,147887,147029,146154,145263,144356,143433,142495,141542,140575,139593,138597,137587,136565,135529,134482,133422,132350,131267,130173,129069,127955,126830,125697,124554,123403,122243,121076,119901,118720,117531,116337,115136,113931,112720,111504,110284,109060,107833,106603,105369,104134,102896,101657,100416,99175,97933,96691,95449,94208,92967,91728,90490,89255,88021,86790,85562,84337,83116,81899,80686,79477,78273,77074,75880,74692,73509,72333,71164,70000,68844,67695,66553,65419,64293,63175,62065,60963,59870,58786,57711,56645,55589,54542,53505,52478,51460,50453,49456,48470,47494,46529,45574,44630,43698,42776,41865,40966,40078,39201,38336,37482,36640,35809,34990,34182,33386,32601,31829,31067,30318,29580,28854,28140,27437,26746,26066,25398,24741,24096,23462,22840,22229,21629,21041,20463,19897,19342,18797,18263,17741,17228,16727,16236,15755,15284,14824,14374,13934,13503,13083,12672,12271,11879,11496,11122,10758,10403,10056,9718,9389,9068,8756,8451,8155,7867,7586,7313,7048,6790,6539,6296,6060,5830,5607,5391,5182,4978,4781,4590,4406,4227,4053,3886,3723,3567,3415,3269,3127,2990,2859,2731,2609,2490,2376,2267,2161,2059,1961,1867,1776,1689,1606,1525,1448,1375,1304,1236,1171,1109,1049,992,938,886,836,788,743,700,659,620,583,547,513,481,451,422,395,369,345,321,299,279,259,241,223,207,192,177,163,151,139,128,117,107,98,90,82,74,68,61,55,50,45,40,36,32,29,25,22,20,17,15,13,11,9,8,7,5,4,4,3,2};

const xip_fir_v7_2_pattern lowPassStage1_chanpats[1] = {P_BASIC};

static xip_fir_v7_2_config gen_lowPassStage1_config() {
  xip_fir_v7_2_config config;
  config.name                = "lowPassStage1";
  config.filter_type         = 2;
  config.rate_change         = XIP_FIR_INTEGER_RATE;
  config.interp_rate         = 1;
  config.decim_rate          = 64;
  config.zero_pack_factor    = 1;
  config.coeff               = &lowPassStage1_coefficients[0];
  config.coeff_padding       = 20;
  config.num_coeffs          = 600;
  config.coeff_sets          = 1;
  config.reloadable          = 0;
  config.is_halfband         = 0;
  config.quantization        = XIP_FIR_INTEGER_COEFF;
  config.coeff_width         = 19;
  config.coeff_fract_width   = 0;
  config.chan_seq            = XIP_FIR_BASIC_CHAN_SEQ;
  config.num_channels        = 1;
  config.init_pattern        = lowPassStage1_chanpats[0];
  config.num_paths           = 1;
  config.data_width          = 16;
  config.data_fract_width    = 0;
  config.output_rounding_mode= XIP_FIR_NON_SYMMETRIC_DOWN;
  config.output_width        = 18;
  config.output_fract_width  = 0,
  config.config_method       = XIP_FIR_CONFIG_SINGLE;
  return config;
}

const xip_fir_v7_2_config lowPassStage1_config = gen_lowPassStage1_config();

